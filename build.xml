<?xml version="1.0" encoding="utf-8"?>
<project name="sencha-cordova" default=".help">
    <!--
    The build-impl.xml file imported here contains the guts of the build process. It is
    a great idea to read that file to understand how the process works, but it is best to
    limit your changes to this file.
    -->
    <import file="${basedir}/.sencha/app/build-impl.xml"/>

    <target name="-after-build">

        <!-- iOS -->

        <!-- delete content of phonegap ios www folder -->
        <delete>
            <fileset dir="${build.dir}/ios/www">
                <exclude name="cordova-2.6.0.js"/>
            </fileset>
        </delete>

        <!-- copy the sencha package to the phonegap ios www folder -->
        <copy todir="${build.dir}/ios/www">
            <fileset dir="${build.dir}/package">
                <exclude name="cordova-2.6.0.js"/>
            </fileset>
        </copy>

        <!-- Android -->

        <!-- delete content of phonegap android assets/www folder -->
        <delete>
            <fileset dir="${build.dir}/android/assets/www">
                <exclude name="cordova-2.6.0.js"/>
            </fileset>
        </delete>

        <!-- copy the sencha package to the phonegap android assets/www folder -->
        <copy todir="${build.dir}/android/assets/www">
            <fileset dir="${build.dir}/package">
                <exclude name="cordova-2.6.0.js"/>
            </fileset>
        </copy>

    </target>

    <!--
    The following targets can be provided to inject logic before and/or after key steps
    of the build process:

        The "init-local" target is used to initialize properties that may be personalized
        for the local machine.

            <target name="-before-init-local"/>
            <target name="-after-init-local"/>

        The "clean" target is used to clean build output from the build.dir.

            <target name="-before-clean"/>
            <target name="-after-clean"/>

        The general "init" target is used to initialize all other properties, including
        those provided by Sencha Cmd.

            <target name="-before-init"/>
            <target name="-after-init"/>

        The "page" target performs the call to Sencha Cmd to build the 'all-classes.js' file.

            <target name="-before-page"/>
            <target name="-after-page"/>

        The "build" target performs the call to Sencha Cmd to build the application.

            <target name="-before-build"/>
            <target name="-after-build"/>
    -->

    <!-- Specify preprocessor options -->
    <!--
    <target name="-before-init">
        <property name="build.options.production.debug" value="debug:false"/>
        <property name="build.options.production.logger" value="logger:true"/>
        <property name="build.options.production.minVersion" value="minVersion:3"/>
        <property name="build.options.production.product" value="product:touch"/>

        <property name="build.options.testing.debug" value="debug:false"/>
        <property name="build.options.testing.logger" value="logger:true"/>
        <property name="build.options.testing.minVersion" value="minVersion:3"/>
        <property name="build.options.testing.product" value="product:touch"/>

        <property name="build.options.package.debug" value="debug:false"/>
        <property name="build.options.package.logger" value="logger:true"/>
        <property name="build.options.package.minVersion" value="minVersion:3"/>
        <property name="build.options.package.product" value="product:touch"/>

        <property name="build.options.native.debug" value="debug:false"/>
        <property name="build.options.native.logger" value="logger:true"/>
        <property name="build.options.native.minVersion" value="minVersion:3"/>
        <property name="build.options.native.product" value="product:touch"/>
    </target>
    -->
</project>
